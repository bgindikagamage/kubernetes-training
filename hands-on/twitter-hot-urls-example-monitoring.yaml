---
apiVersion: v1
data:
  prometheus.yaml: |-
    {
        "apiVersion": 1,
        "datasources": [
            {
                "access": "proxy",
                "editable": false,
                "name": "prometheus",
                "orgId": 1,
                "type": "prometheus",
                "url": "http://prometheus:9090",
                "version": 1
            }
        ]
    }
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: thux
---
apiVersion: v1
data:
  dashboards.yaml: |-
    [
        {
            "folder": "",
            "name": "0",
            "options": {
                "path": "/grafana-dashboard-definitions/0"
            },
            "org_id": 1,
            "type": "file"
        }
    ]
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: thux
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: thux
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - image: grafana/grafana:5.1.0
        name: grafana
        ports:
        - containerPort: 3000
          name: http
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
          readOnly: false
        - mountPath: /etc/grafana/provisioning/datasources
          name: grafana-datasources
          readOnly: false
        - mountPath: /etc/grafana/provisioning/dashboards
          name: grafana-dashboards
          readOnly: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: grafana
      volumes:
      - emptyDir: {}
        name: grafana-storage
      - configMap:
          name: grafana-datasources
        name: grafana-datasources
      - configMap:
          name: grafana-dashboards
        name: grafana-dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-import-dashboards
  namespace: thux
  labels:
    app: grafana
    component: import-dashboards
data:
  thux.json: |
    {
      "dashboard": {
        "__inputs": [
          {
            "name": "DS_PROMETHEUS",
            "label": "prometheus",
            "description": "",
            "type": "datasource",
            "pluginId": "prometheus",
            "pluginName": "Prometheus"
          }
        ],
        "__requires": [
          {
            "type": "panel",
            "id": "graph",
            "name": "Graph",
            "version": ""
          },
          {
            "type": "grafana",
            "id": "grafana",
            "name": "Grafana",
            "version": "3.1.0"
          },
          {
            "type": "datasource",
            "id": "prometheus",
            "name": "Prometheus",
            "version": "1.0.0"
          }
        ],
        "id": null,
        "title": "thux",
        "tags": [],
        "style": "dark",
        "timezone": "browser",
        "editable": true,
        "hideControls": false,
        "sharedCrosshair": false,
        "rows": [
          {
            "collapse": false,
            "editable": true,
            "height": "250px",
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "editable": true,
                "error": false,
                "fill": 1,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 1,
                "isNew": true,
                "legend": {
                  "avg": false,
                  "current": false,
                  "max": false,
                  "min": false,
                  "show": true,
                  "total": false,
                  "values": false,
                  "alignAsTable": true,
                  "rightSide": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "rate(tracker_processed_tweets_total[1m])",
                    "interval": "",
                    "intervalFactor": 2,
                    "legendFormat": "{{ component }} {{ pod_template_hash }}",
                    "metric": "",
                    "refId": "A",
                    "step": 2
                  },
                  {
                    "expr": "rate(resolver_urls_resolved_total[1m])",
                    "interval": "",
                    "intervalFactor": 2,
                    "legendFormat": "{{ component }} {{ pod_template_hash }}",
                    "metric": "",
                    "refId": "B",
                    "step": 2
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "processed_tweets / urls_resolved",
                "tooltip": {
                  "msResolution": true,
                  "shared": true,
                  "sort": 0,
                  "value_type": "cumulative"
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  }
                ]
              }
            ],
            "title": "Row"
          },
          {
            "collapse": false,
            "editable": true,
            "height": "250px",
            "panels": [
              {
                "aliasColors": {},
                "bars": false,
                "datasource": "${DS_PROMETHEUS}",
                "editable": true,
                "error": false,
                "fill": 1,
                "grid": {
                  "threshold1": null,
                  "threshold1Color": "rgba(216, 200, 27, 0.27)",
                  "threshold2": null,
                  "threshold2Color": "rgba(234, 112, 112, 0.22)"
                },
                "id": 2,
                "isNew": true,
                "legend": {
                  "avg": false,
                  "current": false,
                  "max": false,
                  "min": false,
                  "show": true,
                  "total": false,
                  "values": false,
                  "alignAsTable": true,
                  "rightSide": true
                },
                "lines": true,
                "linewidth": 2,
                "links": [],
                "nullPointMode": "connected",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [],
                "span": 12,
                "stack": false,
                "steppedLine": false,
                "targets": [
                  {
                    "expr": "tracker_processed_last_tweet_duration_seconds",
                    "interval": "",
                    "intervalFactor": 2,
                    "legendFormat": "{{ component }} {{pod_template_hash }}",
                    "metric": "tracker_processed_last_tweet_duration_seconds",
                    "refId": "A",
                    "step": 2
                  },
                  {
                    "expr": "resolver_url_resolve_last_duration_seconds",
                    "interval": "",
                    "intervalFactor": 2,
                    "legendFormat": "{{ component }} {{pod_template_hash }}",
                    "metric": "resolver_url_resolve_last_duration_seconds",
                    "refId": "B",
                    "step": 2
                  }
                ],
                "timeFrom": null,
                "timeShift": null,
                "title": "duration",
                "tooltip": {
                  "msResolution": true,
                  "shared": true,
                  "sort": 0,
                  "value_type": "cumulative"
                },
                "type": "graph",
                "xaxis": {
                  "show": true
                },
                "yaxes": [
                  {
                    "format": "s",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  },
                  {
                    "format": "short",
                    "label": null,
                    "logBase": 1,
                    "max": null,
                    "min": null,
                    "show": true
                  }
                ]
              }
            ],
            "title": "New row"
          }
        ],
        "time": {
          "from": "now-15m",
          "to": "now"
        },
        "timepicker": {
          "refresh_intervals": [
            "5s",
            "10s",
            "30s",
            "1m",
            "5m",
            "15m",
            "30m",
            "1h",
            "2h",
            "1d"
          ],
          "time_options": [
            "5m",
            "15m",
            "1h",
            "6h",
            "12h",
            "24h",
            "2d",
            "7d",
            "30d"
          ]
        },
        "templating": {
          "list": []
        },
        "annotations": {
          "list": []
        },
        "refresh": "5s",
        "schemaVersion": 12,
        "version": 1,
        "links": [],
        "gnetId": null
      },
      "overwrite": true,
      "inputs": [{
        "name": "DS_PROMETHEUS",
        "type": "datasource",
        "pluginId": "prometheus",
        "value": "prometheus"
      }]
    }
---
apiVersion: batch/v1
kind: Job
metadata:
  name: grafana-import-dashboards
  namespace: thux
  labels:
    app: grafana
    component: import-dashboards
spec:
  template:
    metadata:
      name: grafana-import-dashboards
      labels:
        app: grafana
        component: import-dashboards
    spec:
      containers:
      - name: grafana-import-dashboards
        image: giantswarm/tiny-tools
        command: ["/bin/sh", "-c"]
        workingDir: /opt/grafana-import-dashboards
        args:
          - >
            echo 'import dashboard "thux"' &&
            curl --silent --fail --show-error \
              --request POST http://admin:admin@grafana:3000/api/dashboards/import \
              --header "Content-Type: application/json" \
              --data-binary @thux.json ;

        volumeMounts:
        - name: config-volume
          mountPath: /opt/grafana-import-dashboards
      restartPolicy: Never
      volumes:
      - name: config-volume
        configMap:
          name: grafana-import-dashboards
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
  namespace: thux
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: thux
spec:
  ports:
  - name: http
    port: 3000
    targetPort: http
  selector:
    app: grafana
  type: NodePort
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  # namespace: default
  namespace: thux
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus
  namespace: thux
spec:
  # replicas: 2
  serviceAccountName: prometheus
  serviceMonitorSelector:
    matchLabels:
      team: frontend
  resources:
    requests:
      memory: 400Mi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: thux
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: thux
spec:
  type: NodePort
  ports:
  - name: web
    # nodePort: 30900
    port: 9090
    protocol: TCP
    targetPort: web
  selector:
    prometheus: prometheus
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: resolver
  namespace: thux
  labels:
    team: frontend
spec:
  selector:
    matchLabels:
      app: thux
      component: resolver
  endpoints:
  - port: metrics
    interval: 10s
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: tracker
  namespace: thux
  labels:
    team: frontend
spec:
  selector:
    matchLabels:
      app: thux
      component: tracker
  endpoints:
  - port: metrics
    interval: 10s
